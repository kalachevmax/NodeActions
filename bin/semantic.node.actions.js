var fs = require('fs');var path = require('path');var crypto = require('crypto');var child_process = require('child_process');var fm = require('../../semantic.fm/bin/semantic.fm.js');var dm = require('../../semantic.dm/bin/semantic.dm.js');var am = require('../../semantic.am/bin/semantic.am.js');var act={fs:{}};act.fs.dir={};act.fs.dir.get={};act.fs.file={};act.fs.tree={};act.fs.node={};act.fs.node.is={};act.fs.stream={};act.proc={};act.hash={};act.fs.Type={FILE:"FILE",DIRECTORY:"DIRECTORY"};act.fs.dir.create=function(b,c,a){fs.mkdir(a,function(a){null===a?b():c("[act.fs.dir.create] "+a.toString())})};act.fs.dir.remove=function(b,c,a){fs.rmdir(a,function(a){null===a?b():c("[act.fs.dir.remove] "+a.toString())})};act.fs.dir.read=function(b,c,a){fs.readdir(a,function(a,d){null===a?b(d):c("[act.fs.dir.read] "+a.toString())})};act.fs.dir.get.nested=fm.script([dm.arg.str("path"),dm.def.array("dirs"),act.fs.dir.read,fm.each(fm.script([dm.set.str("node"),fm.if(act.fs.node.is.directory,fm.script([dm.arr("dirs"),dm.act.arr.push("node")]))])),dm.ret.arr("dirs")]);act.fs.file.read=function(b,c,a){fs.readFile(a,function(a,d){null===a?b(d):c("[act.fs.file.read] "+a.toString())})};act.fs.node.exists=function(b,c,a){fs.exists(a,function(a){b(a)})};act.fs.node.is.directory=function(b,c,a){"string"==typeof a?fs.stat(a,function(a,d){null!==a?b(null!==d&&d.isDirectory()):c("[act.fs.node.is.directory] "+a.toString())}):c("[act.fs.node.is.directory] type of path "+a+" is not "+dm.Type.STRING)};act.fs.tree.read=fm.script([dm.arg.str("root"),dm.set.action(am.tree.node.has.children,act.fs.node.is.directory),dm.set.action(am.tree.node.get.children,act.fs.dir.read),am.tree.traverse]);act.fs.tree.remove=fm.script([dm.arg.str("root"),dm.set.action(am.tree.node.custom.leave,act.fs.dir.remove),am.tree.traverse]);act.fs.stream.__stream=null;act.fs.stream.create=function(b,c){return function(a,e,d){act.fs.stream.__stream=fs.createWriteStream(b,c);a()}};act.fs.stream.read=function(b,c){return function(a,e,d){var f=fs.createReadStream(d);f.on("readable",function(){for(var a;null!==(a=f.read(b));)c(fm.nop,console.log,a)});f.on("end",function(){a()});f.on("error",function(a){e("[act.fs.stream.read] "+a.toString)})}};
act.fs.stream.write=function(b,c,a){null!==act.fs.stream.__stream?(act.fs.stream.__stream.write(a),b(a)):c("[act.fs.stream.write] stream is null")};act.fs.stream.close=function(b,c,a){null!==act.fs.stream.__stream?(act.fs.stream.__stream.end(),b(a)):c("[act.fs.stream.close] stream is null")};act.fs.FileLink=function(b){this.__path=b};act.fs.FileLink.prototype.isValid=function(b,c,a){var e=this;act.fs.node.exists(function(d){d?b(a):c("[fs.FileLink] path "+e.__path+" does not exists")},c,this.__path)};act.fs.FileLink.prototype.retrieve=function(b,c,a){act.fs.file.read(b,c,this.__path)};act.fs.DirectoryLink=function(b){this.__path=b};act.fs.DirectoryLink.prototype.isValid=function(b,c,a){var e=this;act.fs.node.is.directory(function(d){d?b(a):c("[fs.DirectoryLink] path "+e.__path+" does not exists")},c,this.__path)};act.fs.DirectoryLink.prototype.retrieve=function(b,c,a){act.fs.tree.read(b,c,this.__path)};act.fs.TypeProvider=function(){};
act.fs.TypeProvider.prototype.assert=function(b,c,a){return function(e,d,f){function g(){"string"===typeof a?act.fs.node.is.directory(function(a){a?e(f):d("[act.fs.TypeProvider] value type for symbol + "+b+"is not "+c)},d,a):d("[act.fs.TypeProvider] type of path "+a+" is not "+dm.Type.STRING)}function h(){"string"===typeof a?act.fs.node.exists(function(a){a?e(f):d("[TypeProvider] value type for symbol + "+b+"is not "+c)},d,a):d("[act.fs.TypeProvider] type of path "+a+" is not "+dm.Type.STRING)}switch(c){case act.fs.Type.DIRECTORY:g();
break;case act.fs.Type.FILE:h();break;default:d("[act.fs.TypeProvider] type "+c+" for symbol + "+b+"is not defined")}}};act.fs.TypeProvider.prototype.createLink=function(b,c,a){switch(c){case act.fs.Type.FILE:return new act.fs.FileLink(a);case act.fs.Type.DIRECTORY:return new act.fs.DirectoryLink(a)}return null};act.proc.exec=function(b){return function(c,a,e){child_process.exec(b,c,function(b,c,g){console.log(c);console.log(g);null===b?a():e("[act.proc.exec]: "+b.toString())})}};act.hash.sha1=function(b){return function(c,a,e){c(crypto.createHash("sha1").update(e).digest(b))}};module.exports = act;
